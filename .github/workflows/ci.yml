name: CI
on: [push]
jobs:
  ci-started-slack-notification:
    name: CI Started Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#sitenotifications'
          SLACK_USERNAME: Github
          SLACK_ICON: https://www.tjdraper.com/uploads/general/slack-notifications-icon.png
          SLACK_COLOR: '#1B7FBA'
          SLACK_TITLE: Github CI Running

  build:
    runs-on: ubuntu-latest

    needs: ci-started-slack-notification

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: stmark-docker-cache-{hash}
          restore-keys: |
            stmark-docker-cache-

      - name: Docker Build App Container
        run: docker/bin/build.sh "$GITHUB_SHA";

      - name: Create code quality container
        run: docker run -d --name stmark-code-quality -w /opt/project --env ENABLE_PHP_DEV_CONFIG=1 --env ENABLE_XDEBUG=1 --env DISABLE_PHP_FPM=1 --env DISABLE_NGINX=1 ghcr.io/st-mark-reformed/stmarkreformed.com-app:"$GITHUB_SHA"

      - name: Install All Composer Dependencies
        run: docker exec stmark-code-quality bash -c "composer install --no-interaction --no-progress"

      - name: Run PHPUnit
        run: docker exec stmark-code-quality bash -c "XDEBUG_MODE=coverage ./vendor/bin/phpunit"

      - name: Run PHPStan
        run: docker exec stmark-code-quality bash -c "XDEBUG_MODE=off php -d memory_limit=4G ./vendor/bin/phpstan analyse CraftFrontController.php public/index.php config src --no-progress"

      - name: Run PHPCS
        run: docker exec stmark-code-quality bash -c "XDEBUG_MODE=off php -d memory_limit=4G ./vendor/bin/phpcs"

      - name: Run php-cs-fixer
        run: docker exec stmark-code-quality bash -c "XDEBUG_MODE=off ./vendor/bin/php-cs-fixer fix -v --using-cache=no"

      - name: Install node dependencies
        run: docker run --name stmark-node-code-quality -v ${PWD}:/app -w /app node:16.10.0 bash -c "yarn" && docker rm -f stmark-node-code-quality &>/dev/null

      - name: Run eslint
        run: docker run --name stmark-node-code-quality -v ${PWD}:/app -w /app node:16.10.0 bash -c 'yarn eslint --ext .js --ext .ts --ext .jsx --ext .tsx --ext .html --ext .vue --ext .mjs --ext .twig --no-error-on-unmatched-pattern assets src' && docker rm -f stmark-node-code-quality &>/dev/null

      - name: Run stylelint
        run: docker run --name stmark-node-code-quality -v ${PWD}:/app -w /app node:16.10.0 bash -c 'yarn stylelint --allow-empty-input "assets/**/*.{css,pcss,html,twig}" "src/**/*.{css,pcss,html,twig}"' && docker rm -f stmark-node-code-quality &>/dev/null

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push app image
        run: docker push ghcr.io/st-mark-reformed/stmarkreformed.com-app:"$GITHUB_SHA"

      - name: Push db image
        run: docker push ghcr.io/st-mark-reformed/stmarkreformed.com-db:"$GITHUB_SHA"

  ci-failed-slack-notification:
    name: CI Failed Slack Notification
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#sitenotifications'
          SLACK_USERNAME: Github
          SLACK_ICON: https://www.tjdraper.com/uploads/general/slack-notifications-icon.png
          SLACK_COLOR: '#A94442'
          SLACK_TITLE: Github CI Failed

  ci-succeeded-slack-notification:
    name: CI Succeeded Slack Notification
    needs: build
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#sitenotifications'
          SLACK_USERNAME: Github
          SLACK_ICON: https://www.tjdraper.com/uploads/general/slack-notifications-icon.png
          SLACK_COLOR: '#3B763D'
          SLACK_TITLE: Github CI Succeeded
