runBeforeEveryItem: |
  DATE_STAMP={{time 'YmdHis'}};
  PROJECT_DIR=/root/build-projects/stmarkreformed.com;
  RELEASES_DIR=${PROJECT_DIR}/releases;
  THIS_RELEASE_DIR=${RELEASES_DIR}/${DATE_STAMP};

pipelineItems:
  - description: "Copy repo contents to release"
    script: |
      cp -R ${PROJECT_DIR}/repo ${THIS_RELEASE_DIR};

  - description: "Build Docker Images"
    script: |
      cd ${THIS_RELEASE_DIR};
      ./dev docker-build;

  - description: "Push Images to Registry"
    script: |
      docker push registry.digitalocean.com/buzzingpixel/stmarkreformed.com-app;
      docker push registry.digitalocean.com/buzzingpixel/stmarkreformed.com-db;

  - description: "Pull Images"
    script: |
      docker pull registry.digitalocean.com/buzzingpixel/stmarkreformed.com-app;
      docker pull registry.digitalocean.com/buzzingpixel/stmarkreformed.com-db;
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Disable scheduler and queue runners"
    script: |
      cd /root/stmarkreformed.com;
      echo "" > /root/stmarkreformed.com/disableSchedule;
      ./dev supervisor-stop-queue
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Stop old containers"
    script: |
      cd /root/stmarkreformed.com;
      docker kill stmark-utility;
      docker-compose -f docker-compose.yml -f docker-compose.prod.yml -p stmark down || printf "\n";
      docker-compose -f docker-compose.yml -f docker-compose.prod.yml -p stmark kill || printf "\n";
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Copy Files"
    script: |
      docker run --name tmp registry.digitalocean.com/buzzingpixel/stmarkreformed.com-app /bin/true;
      mkdir -p /root/stmarkreformed.com/docker/utility;
      docker cp tmp:/opt/project/docker/utility/prod.sh /root/stmarkreformed.com/docker/utility/prod.sh;
      docker cp tmp:/opt/project/.env /root/stmarkreformed.com/.env;
      docker cp tmp:/opt/project/docker-compose.prod.yml /root/stmarkreformed.com/docker-compose.prod.yml;
      docker cp tmp:/opt/project/docker-compose.yml /root/stmarkreformed.com/docker-compose.yml;
      docker cp tmp:/opt/project/queueRunner.sh /root/stmarkreformed.com/queueRunner.sh;
      chmod +x /root/stmarkreformed.com/queueRunner.sh;
      docker cp tmp:/opt/project/scheduleRunner.sh /root/stmarkreformed.com/scheduleRunner.sh;
      chmod +x /root/stmarkreformed.com/scheduleRunner.sh;
      docker rm tmp;
      cat /root/stmarkreformed.com/.env.local >> /root/stmarkreformed.com/.env
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Start new containers from new images"
    script: |
      cd /root/stmarkreformed.com;
      docker-compose -f docker-compose.yml -f docker-compose.prod.yml -p stmark up -d --remove-orphans --no-color;
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Restart the proxy server"
    script: |
      cd /root/nginx-master;
      docker kill certbot-master;
      docker-compose down;
      docker-compose up -d;
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Run various after scripts"
    script: |
      cd /root/stmarkreformed.com;
      ./dev container-app php craft project-config/apply --interactive=0;
      ./dev container-app php craft migrate/all --interactive=0;
      ./dev container-app php craft cache/flush-all --interactive=0;
      ./dev container-app php craft clear-caches/compiled-templates --interactive=0;
      ./dev container-app php craft clear-caches/data --interactive=0;
      ./dev container-app php craft clear-caches/static-caches --interactive=0;
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker

  - description: "Enable scheduler and queue runners"
    script: |
      cd /root/stmarkreformed.com;
      rm /root/stmarkreformed.com/disableSchedule;
      ./dev supervisor-start-queue
    runOnServers:
      - buzzingpixel-do-buzzingpixel-docker
